// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../prisma-db"
}

// this will generate prisma client for the dist folder
generator dist_client {
  provider = "prisma-client-js"
  output   = "../dist/prisma-db"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String?  @db.VarChar(120)
  username   String   @unique()
  password   String?
  created_at DateTime @default(now()) @db.Timestamp()
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp()

  chat_users ChatUsers[]
  messages   Message[]

  @@map("users")
}

model Chat {
  id         Int      @id @default(autoincrement())
  title      String?
  created_by Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  users    ChatUsers[]
  messages Message[]

  @@map("chats")
}

model ChatUsers {
  id        Int      @id @default(autoincrement())
  chat_id   Int
  user_id   Int
  role      String   @default("user")
  joined_at DateTime @default(now())

  chat Chat @relation(fields: [chat_id], references: [id])
  user User @relation(fields: [user_id], references: [id])
}

model Message {
  id         Int      @id @default(autoincrement())
  chat_id    Int
  sender_id  Int
  content    String
  type       String   @default("user") // "user" | "ai" 
  created_at DateTime @default(now())

  chat   Chat @relation(fields: [chat_id], references: [id])
  sender User @relation(fields: [sender_id], references: [id])
}
